name: 08 - Using Variables
on: workflow_dispatch
env:
  WORKFLOW_VAR: "I am workflow env variable"
  OVERWRITTEN_VAR: "I will be overwritten"

jobs:
  echo:
    env:
      JOB_VAR: "I am job env variable"
      OVERWRITTEN_VAR: "I have been overwritten at the job level"
    runs-on: ubuntu-latest
    steps:
      - name: Print Env Variables
        env:
          STEP_VAR: "I am step env variable"
          step_var2 : "I am another step env variable"
        run: |
          echo "Step env var: ${{ env.STEP_VAR }}"
          echo "Step env var 2: $step_var2"
          echo "Job env var: $JOB_VAR"
          echo "Workflow env var: $WORKFLOW_VAR"
          echo "Overwritten env var: $OVERWRITTEN_VAR"
      - name: Overwrite Variable - Changed in Step
        env:
          OVERWRITTEN_VAR: "I have been overwritten at the step level"
        run: |
          echo "Overwritten env var: $OVERWRITTEN_VAR"
      
      - name: Overwriteen Variable - Changed in Job
        run: |
          echo "Overwritten env var: $OVERWRITTEN_VAR"
    
  echo-2:
    runs-on: ubuntu-latest
    steps:
      - name: Print Message
        run: |
          echo "This is a second job in the same workflow."
          echo "It does not have access to the variables defined in the first job."
          echo "But it can access the workflow variables."
          echo "Workflow env var: ${{ env.WORKFLOW_VAR }}"
          echo "Overwritten env var: ${{ env.OVERWRITTEN_VAR }}"
          echo "Job env var (expected Null): ${{ env.JOB_VAR }}"
          echo "Step env var (expected Null): ${{ env.STEP_VAR }}"
          echo "Step env var 2 (expected Null): ${{ env.step_var2 }}"
          